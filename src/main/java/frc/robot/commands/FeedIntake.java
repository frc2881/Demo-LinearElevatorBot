// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands;

import edu.wpi.first.wpilibj.command.Command;
import frc.robot.Robot;
import frc.robot.subsystems.Intake;

/**
 *
 */
public class FeedIntake extends Command {

    private double speed;

    public FeedIntake() {
        requires(Robot.intake);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {

    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double triggerLeft = Robot.oi.getManipulatorTriggerLeft();
        double triggerRight = Robot.oi.getManipulatorTriggerRight();
        if(triggerLeft != 0 && triggerRight == 0){
            speed = triggerLeft;

        }else if(triggerRight != 0 && triggerLeft == 0){
            speed = -triggerRight;

        }else{
            speed = 0;
        }
        Robot.intake.intakeRun(speed);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void interrupted() {
        
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void end() {
        Robot.intake.intakeRun(0);
    }
}